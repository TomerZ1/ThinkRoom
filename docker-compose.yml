


services:
  postgres:
    image: postgres:16-alpine
    container_name: thinkroom-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-app}
      POSTGRES_PASSWORD: ${DB_PASS:-app}
      POSTGRES_DB: ${DB_NAME:-thinkroom}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-app} -d ${DB_NAME:-thinkroom}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: thinkroom-redis
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    container_name: thinkroom-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minio123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  api:
    image: ghcr.io/astral-sh/uv:python3.12-bookworm
    container_name: thinkroom-api
    working_dir: /app
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    command: >
      sh -c "uv sync && uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

volumes:
  pgdata:
  minio: